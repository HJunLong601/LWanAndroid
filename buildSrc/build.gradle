

buildscript {
    ext {
        booster_version = '4.16.3'
    }
    repositories {
//        google()
//        mavenCentral()
        maven { url "https://maven.aliyun.com/repository/central" }
        maven { url "https://jitpack.io" }
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }

//        jcenter()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.21'
    }
}

apply plugin: 'groovy'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'


repositories {
//    google()
//    mavenCentral()
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://jitpack.io" }
    maven { url "https://maven.aliyun.com/repository/google" }
    maven { url "https://maven.aliyun.com/repository/jcenter" }
    maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
    maven { url "https://maven.aliyun.com/repository/gradle-plugin" }

//    jcenter()
}

dependencies {
    // gradle sdk
    implementation gradleApi()
    // groovy sdk
    implementation localGroovy()
    // android build tools
    implementation('com.android.tools.build:gradle:7.4.2')

    implementation("org.ow2.asm:asm:7.1")
    implementation("org.ow2.asm:asm-util:7.1")
    implementation("org.ow2.asm:asm-commons:7.1")
    implementation("org.javassist:javassist:3.23.1-GA")
    implementation("commons-io:commons-io:2.4")
    implementation("commons-codec:commons-codec:1.10")


    kapt "com.google.auto.service:auto-service:1.0"
    api "com.didiglobal.booster:booster-api:$booster_version"
    api "com.didiglobal.booster:booster-transform-asm:$booster_version"


    Properties properties = new Properties()
    properties.load(new FileReader(new File(rootDir.parentFile, "gradle.properties")))
    def isEnableSkin = properties.getProperty("isEnableSkin").toBoolean()
    if (isEnableSkin.toBoolean()){
        implementation project(":skin-plugin")
    }

}

sourceSets {
    main {
        groovy {
            srcDir 'src/main/groovy'
        }

        java {
            srcDirs += ['src/main/java']
        }

        kotlin {
            srcDirs += ['src/main/kotlin']
        }

        resources {
            srcDir 'src/main/resources'
        }
    }
}
// https://docs.gradle.org/7.5/javadoc/org/gradle/api/file/DuplicatesStrategy.html
tasks.findByName("processResources").configure {
    duplicatesStrategy 'include'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}





